# Rento 环境变量配置模板
# 复制此文件为 .env 并根据部署环境修改相应的值
# 
# 部署方式：
# - 推荐使用: podman-compose up -d
# - 备选使用: docker-compose up -d

# ===========================================
# 应用基础配置
# ===========================================
NODE_ENV=production
PORT=3001
NEXTAUTH_URL=http://localhost:3001
NEXTAUTH_SECRET=your-nextauth-secret-change-this-in-production

# ===========================================
# 数据库配置
# ===========================================
# 开发环境 - SQLite (本地开发推荐)
# DATABASE_URL="file:./dev.db"

# 生产环境 - PostgreSQL (容器部署推荐)
DATABASE_URL=postgresql://rento:your-secure-password@postgres:5432/rento_production
POSTGRES_DB=rento_production
POSTGRES_USER=rento
POSTGRES_PASSWORD=your-secure-password-here

# 可选：自定义数据库端口
# POSTGRES_PORT=5432

# ===========================================
# 应用服务配置
# ===========================================
BACKUP_DIR=/app/backups
LOG_DIR=/app/logs

# 可选：Redis缓存配置
REDIS_URL=redis://redis:6379
# REDIS_PORT=6379

# ===========================================
# 监控和日志配置
# ===========================================
ENABLE_MONITORING=true
PERFORMANCE_MONITORING=true
LOG_LEVEL=info

# ===========================================
# 安全配置
# ===========================================
ALLOWED_ORIGINS=http://localhost:3001
CORS_ENABLED=true
MAX_REQUEST_SIZE=10mb
REQUEST_TIMEOUT=30000

# ===========================================
# 网络端口配置 (可选)
# ===========================================
# HTTP_PORT=80
# HTTPS_PORT=443

# ===========================================
# 邮件配置 (可选，用于告警通知)
# ===========================================
# SMTP_HOST=smtp.your-provider.com
# SMTP_PORT=587
# SMTP_USER=your-email@domain.com
# SMTP_PASS=your-email-password
# ALERT_EMAIL=admin@your-domain.com

# ===========================================
# SSL配置 (生产环境)
# ===========================================
# SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
# SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# ===========================================
# 部署说明
# ===========================================
# 1. 复制此文件为 .env: cp .env.example .env
# 2. 根据部署环境修改相应配置
# 3. 开发环境：使用 SQLite 数据库，设置 NODE_ENV=development
# 4. 生产环境：使用 PostgreSQL 数据库，设置 NODE_ENV=production
# 5. 启动服务：
#    - Podman (推荐): podman-compose up -d
#    - Docker (备选): docker-compose up -d
# 6. 数据库迁移：
#    - Podman: podman exec -it rento-app-1 /app/scripts/migrate-and-seed.sh
#    - Docker: docker exec -it rento-app-1 /app/scripts/migrate-and-seed.sh